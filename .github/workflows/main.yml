name: Pipeline CI/CD
run-name: Pipeline CI/CD executada por ${{ github.actor }} em ${{ github.run_number }}

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.300"
      - name: Execucao do comando build
        working-directory: ./src
        run: dotnet build Review-Filmes.sln

  testes:
    needs: [build]
    uses: iadocicco-ale/desafio-cicd-01/.github/workflows/testes.yml@main
    secrets: inherit

  release:
    name: Criacao de release
    runs-on: ubuntu-latest
    needs: [testes]
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4

      - name: Analise do Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./src/Review-Filmes.Web/Dockerfile

      - name: Efetuando o login no DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      - name: Build e push da Imagem Docker
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./src
          file: ./src/Review-Filmes.Web/Dockerfile
          tags: |
            iadocicco/projeto-devops-pro:latest
            iadocicco/projeto-devops-pro:v${{ github.run_number }}

      - name: Executar o Trivy
        uses: aquasecurity/trivy-action@0.23.0
        with:
          scan-type: 'image'
          image-ref: iadocicco/projeto-devops-pro:v${{ github.run_number }}
          format: sarif
          output: trivy-docker-result.sarif
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

      - name: Upload do arquivo trivy para o github
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: docker-result
          sarif_file: trivy-docker-result.sarif

  deploy-homolog:
    needs: [release]
    uses: iadocicco-ale/desafio-cicd-01/.github/workflows/deploy.yml@main
    secrets: inherit
    with:
      environment-name: homologacao
      environment-url: http://homologacao.k8s.local/

  teste-e2e:
    name: Teste End to End
    runs-on: ubuntu-latest
    needs: [deploy-homolog]
    environment:
      name: homologacao
    container:
      image: fabricioveronez/webdriver-dotnet:chrome
      env:
        BASE_URL: "http://${{ vars.BASE_URL }}"
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4
      - name: Execucao do Teste End to End
        working-directory: ./src
        run: dotnet test ./Review-Filmes.Test.EndToEnd/Review-Filmes.Test.EndToEnd.csproj

  deploy-producao:
    needs: [teste-e2e]
    uses: iadocicco-ale/desafio-cicd-01/.github/workflows/deploy.yml@main
    secrets: inherit
    with:
      environment-name: producao
      environment-url: http://producao.k8s.local/